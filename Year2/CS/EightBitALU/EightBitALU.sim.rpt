Simulator report for EightBitALU
Sun Feb 19 22:19:38 2023
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 240.0 ns     ;
; Simulation Netlist Size     ; 165 nodes    ;
; Simulation Coverage         ;      87.88 % ;
; Total Number of Transitions ; 2712         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Functional ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off        ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      87.88 % ;
; Total nodes checked                                 ; 165          ;
; Total output ports checked                          ; 165          ;
; Total output ports with complete 1/0-value coverage ; 145          ;
; Total output ports with no 1/0-value coverage       ; 18           ;
; Total output ports with no 1-value coverage         ; 18           ;
; Total output ports with no 0-value coverage         ; 20           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                      ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                     ; Output Port Name                                                                              ; Output Port Type ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+
; |EightBitALU|Cout                                                                             ; |EightBitALU|Cout                                                                             ; pin_out          ;
; |EightBitALU|A[7]                                                                             ; |EightBitALU|A[7]                                                                             ; out              ;
; |EightBitALU|A[6]                                                                             ; |EightBitALU|A[6]                                                                             ; out              ;
; |EightBitALU|A[5]                                                                             ; |EightBitALU|A[5]                                                                             ; out              ;
; |EightBitALU|A[4]                                                                             ; |EightBitALU|A[4]                                                                             ; out              ;
; |EightBitALU|A[3]                                                                             ; |EightBitALU|A[3]                                                                             ; out              ;
; |EightBitALU|A[2]                                                                             ; |EightBitALU|A[2]                                                                             ; out              ;
; |EightBitALU|A[1]                                                                             ; |EightBitALU|A[1]                                                                             ; out              ;
; |EightBitALU|A[0]                                                                             ; |EightBitALU|A[0]                                                                             ; out              ;
; |EightBitALU|B[7]                                                                             ; |EightBitALU|B[7]                                                                             ; out              ;
; |EightBitALU|B[6]                                                                             ; |EightBitALU|B[6]                                                                             ; out              ;
; |EightBitALU|B[5]                                                                             ; |EightBitALU|B[5]                                                                             ; out              ;
; |EightBitALU|B[4]                                                                             ; |EightBitALU|B[4]                                                                             ; out              ;
; |EightBitALU|B[3]                                                                             ; |EightBitALU|B[3]                                                                             ; out              ;
; |EightBitALU|B[2]                                                                             ; |EightBitALU|B[2]                                                                             ; out              ;
; |EightBitALU|B[1]                                                                             ; |EightBitALU|B[1]                                                                             ; out              ;
; |EightBitALU|B[0]                                                                             ; |EightBitALU|B[0]                                                                             ; out              ;
; |EightBitALU|R[7]                                                                             ; |EightBitALU|R[7]                                                                             ; pin_out          ;
; |EightBitALU|R[6]                                                                             ; |EightBitALU|R[6]                                                                             ; pin_out          ;
; |EightBitALU|R[5]                                                                             ; |EightBitALU|R[5]                                                                             ; pin_out          ;
; |EightBitALU|R[4]                                                                             ; |EightBitALU|R[4]                                                                             ; pin_out          ;
; |EightBitALU|R[3]                                                                             ; |EightBitALU|R[3]                                                                             ; pin_out          ;
; |EightBitALU|R[2]                                                                             ; |EightBitALU|R[2]                                                                             ; pin_out          ;
; |EightBitALU|R[1]                                                                             ; |EightBitALU|R[1]                                                                             ; pin_out          ;
; |EightBitALU|R[0]                                                                             ; |EightBitALU|R[0]                                                                             ; pin_out          ;
; |EightBitALU|OneBitALU:inst|inst10                                                            ; |EightBitALU|OneBitALU:inst|inst10                                                            ; out0             ;
; |EightBitALU|OneBitALU:inst|inst11                                                            ; |EightBitALU|OneBitALU:inst|inst11                                                            ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]     ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]     ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]     ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]     ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0               ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0               ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]    ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0  ; |EightBitALU|OneBitALU:inst|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0  ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1  ; |EightBitALU|OneBitALU:inst|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1  ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]    ; |EightBitALU|OneBitALU:inst|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst5                                          ; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst5                                          ; out0             ;
; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst8                                          ; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst8                                          ; out0             ;
; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst9                                          ; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst9                                          ; out0             ;
; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst                                           ; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|inst                                           ; out0             ;
; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|xor3:inst7|1                                   ; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|xor3:inst7|1                                   ; out0             ;
; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|xor3:inst7|3                                   ; |EightBitALU|OneBitALU:inst|OneBitAdder:inst12|xor3:inst7|3                                   ; out0             ;
; |EightBitALU|OneBitALU:inst3|inst10                                                           ; |EightBitALU|OneBitALU:inst3|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst3|inst11                                                           ; |EightBitALU|OneBitALU:inst3|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst3|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst3|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst3|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst3|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
; |EightBitALU|OneBitALU:inst4|inst10                                                           ; |EightBitALU|OneBitALU:inst4|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst4|inst11                                                           ; |EightBitALU|OneBitALU:inst4|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst4|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst4|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst4|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst4|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
; |EightBitALU|OneBitALU:inst5|inst10                                                           ; |EightBitALU|OneBitALU:inst5|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst5|inst11                                                           ; |EightBitALU|OneBitALU:inst5|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst5|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst5|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst5|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst5|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
; |EightBitALU|OneBitALU:inst6|inst10                                                           ; |EightBitALU|OneBitALU:inst6|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst6|inst11                                                           ; |EightBitALU|OneBitALU:inst6|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst6|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst6|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst6|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst6|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
; |EightBitALU|OneBitALU:inst7|inst10                                                           ; |EightBitALU|OneBitALU:inst7|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst7|inst11                                                           ; |EightBitALU|OneBitALU:inst7|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst7|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst7|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst7|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst7|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
; |EightBitALU|OneBitALU:inst8|inst10                                                           ; |EightBitALU|OneBitALU:inst8|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst8|inst11                                                           ; |EightBitALU|OneBitALU:inst8|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst8|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst8|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst8|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst8|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
; |EightBitALU|OneBitALU:inst9|inst10                                                           ; |EightBitALU|OneBitALU:inst9|inst10                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst9|inst11                                                           ; |EightBitALU|OneBitALU:inst9|inst11                                                           ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data0_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data2_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|_~0              ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst9|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; |EightBitALU|OneBitALU:inst9|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]~1 ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; |EightBitALU|OneBitALU:inst9|mux:inst8|lpm_mux:$00001|mux_lmc:auto_generated|result_node[0]   ; out0             ;
; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst5                                         ; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst5                                         ; out0             ;
; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst8                                         ; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst8                                         ; out0             ;
; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst9                                         ; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst9                                         ; out0             ;
; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst                                          ; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|inst                                          ; out0             ;
; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|xor3:inst7|1                                  ; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|xor3:inst7|1                                  ; out0             ;
; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|xor3:inst7|3                                  ; |EightBitALU|OneBitALU:inst9|OneBitAdder:inst12|xor3:inst7|3                                  ; out0             ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                         ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                     ; Output Port Name                                                                              ; Output Port Type ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+
; |EightBitALU|OP[1]                                                                            ; |EightBitALU|OP[1]                                                                            ; out              ;
; |EightBitALU|OP[0]                                                                            ; |EightBitALU|OP[0]                                                                            ; out              ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                         ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                     ; Output Port Name                                                                              ; Output Port Type ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+
; |EightBitALU|Cin                                                                              ; |EightBitALU|Cin                                                                              ; out              ;
; |EightBitALU|Binvert                                                                          ; |EightBitALU|Binvert                                                                          ; out              ;
; |EightBitALU|OP[1]                                                                            ; |EightBitALU|OP[1]                                                                            ; out              ;
; |EightBitALU|OP[0]                                                                            ; |EightBitALU|OP[0]                                                                            ; out              ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]     ; out0             ;
; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; |EightBitALU|OneBitALU:inst|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0  ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst3|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst4|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst5|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst6|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst7|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst8|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|data1_wire[0]    ; out0             ;
; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; |EightBitALU|OneBitALU:inst9|mux:inst9|lpm_mux:$00001|mux_nmc:auto_generated|result_node[0]~0 ; out0             ;
+-----------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Sun Feb 19 22:19:38 2023
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off EightBitALU -c EightBitALU
Info: Using vector source file "C:/Users/ASUS/Documents/KMITL/CS/EightBitALU/EightBitALU.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      87.88 %
Info: Number of transitions in simulation is 2712
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 142 megabytes
    Info: Processing ended: Sun Feb 19 22:19:38 2023
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


